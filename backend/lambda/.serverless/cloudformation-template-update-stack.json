{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "The AWS CloudFormation template for this Serverless application",
  "Resources": {
    "ServerlessDeploymentBucket": {
      "Type": "AWS::S3::Bucket",
      "Properties": {
        "BucketEncryption": {
          "ServerSideEncryptionConfiguration": [
            {
              "ServerSideEncryptionByDefault": {
                "SSEAlgorithm": "AES256"
              }
            }
          ]
        }
      }
    },
    "ServerlessDeploymentBucketPolicy": {
      "Type": "AWS::S3::BucketPolicy",
      "Properties": {
        "Bucket": {
          "Ref": "ServerlessDeploymentBucket"
        },
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "s3:*",
              "Effect": "Deny",
              "Principal": "*",
              "Resource": [
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      },
                      "/*"
                    ]
                  ]
                },
                {
                  "Fn::Join": [
                    "",
                    [
                      "arn:",
                      {
                        "Ref": "AWS::Partition"
                      },
                      ":s3:::",
                      {
                        "Ref": "ServerlessDeploymentBucket"
                      }
                    ]
                  ]
                }
              ],
              "Condition": {
                "Bool": {
                  "aws:SecureTransport": false
                }
              }
            }
          ]
        }
      }
    },
    "ConnectLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/growzone-chat-websocket-production-connect"
      }
    },
    "DisconnectLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/growzone-chat-websocket-production-disconnect"
      }
    },
    "SendMessageLogGroup": {
      "Type": "AWS::Logs::LogGroup",
      "Properties": {
        "LogGroupName": "/aws/lambda/growzone-chat-websocket-production-sendMessage"
      }
    },
    "IamRoleLambdaExecution": {
      "Type": "AWS::IAM::Role",
      "Properties": {
        "AssumeRolePolicyDocument": {
          "Version": "2012-10-17",
          "Statement": [
            {
              "Effect": "Allow",
              "Principal": {
                "Service": [
                  "lambda.amazonaws.com"
                ]
              },
              "Action": [
                "sts:AssumeRole"
              ]
            }
          ]
        },
        "Policies": [
          {
            "PolicyName": {
              "Fn::Join": [
                "-",
                [
                  "growzone-chat-websocket",
                  "production",
                  "lambda"
                ]
              ]
            },
            "PolicyDocument": {
              "Version": "2012-10-17",
              "Statement": [
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:CreateLogStream",
                    "logs:CreateLogGroup",
                    "logs:TagResource"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/growzone-chat-websocket-production*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "logs:PutLogEvents"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/growzone-chat-websocket-production*:*:*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "dynamodb:PutItem",
                    "dynamodb:GetItem",
                    "dynamodb:DeleteItem",
                    "dynamodb:Query",
                    "dynamodb:Scan",
                    "dynamodb:UpdateItem"
                  ],
                  "Resource": [
                    {
                      "Fn::GetAtt": [
                        "ConnectionsTable",
                        "Arn"
                      ]
                    },
                    {
                      "Fn::Sub": "${ConnectionsTable.Arn}/index/*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "execute-api:ManageConnections"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:aws:execute-api:${AWS::Region}:${AWS::AccountId}:${WebsocketsApi}/*"
                    }
                  ]
                },
                {
                  "Effect": "Allow",
                  "Action": [
                    "execute-api:ManageConnections"
                  ],
                  "Resource": [
                    {
                      "Fn::Sub": "arn:${AWS::Partition}:execute-api:*:*:*/@connections/*"
                    }
                  ]
                }
              ]
            }
          }
        ],
        "Path": "/",
        "RoleName": {
          "Fn::Join": [
            "-",
            [
              "growzone-chat-websocket",
              "production",
              {
                "Ref": "AWS::Region"
              },
              "lambdaRole"
            ]
          ]
        }
      }
    },
    "ConnectLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/growzone-chat-websocket/production/1761562199725-2025-10-27T10:49:59.725Z/growzone-chat-websocket.zip"
        },
        "Handler": "connect.handler",
        "Runtime": "python3.11",
        "FunctionName": "growzone-chat-websocket-production-connect",
        "MemorySize": 256,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE": "growzone-chat-websocket-connections-production",
            "JWT_SECRET": "c7d5dd8f0387a62e36d6030bb6477374c9565c42e6bbf24fE",
            "POSTGRES_HOST": "dev1-growzone-database.cbs8g6go4hja.us-east-1.rds.amazonaws.com",
            "POSTGRES_DB": "dev_growzone_database",
            "POSTGRES_USER": "dev_api",
            "POSTGRES_PASSWORD": "GrowzoneDB2025SecurePass48bba072"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "ConnectLogGroup"
      ]
    },
    "DisconnectLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/growzone-chat-websocket/production/1761562199725-2025-10-27T10:49:59.725Z/growzone-chat-websocket.zip"
        },
        "Handler": "disconnect.handler",
        "Runtime": "python3.11",
        "FunctionName": "growzone-chat-websocket-production-disconnect",
        "MemorySize": 256,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE": "growzone-chat-websocket-connections-production",
            "JWT_SECRET": "c7d5dd8f0387a62e36d6030bb6477374c9565c42e6bbf24fE",
            "POSTGRES_HOST": "dev1-growzone-database.cbs8g6go4hja.us-east-1.rds.amazonaws.com",
            "POSTGRES_DB": "dev_growzone_database",
            "POSTGRES_USER": "dev_api",
            "POSTGRES_PASSWORD": "GrowzoneDB2025SecurePass48bba072"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "DisconnectLogGroup"
      ]
    },
    "SendMessageLambdaFunction": {
      "Type": "AWS::Lambda::Function",
      "Properties": {
        "Code": {
          "S3Bucket": {
            "Ref": "ServerlessDeploymentBucket"
          },
          "S3Key": "serverless/growzone-chat-websocket/production/1761562199725-2025-10-27T10:49:59.725Z/growzone-chat-websocket.zip"
        },
        "Handler": "send_message.handler",
        "Runtime": "python3.11",
        "FunctionName": "growzone-chat-websocket-production-sendMessage",
        "MemorySize": 256,
        "Timeout": 30,
        "Environment": {
          "Variables": {
            "CONNECTIONS_TABLE": "growzone-chat-websocket-connections-production",
            "JWT_SECRET": "c7d5dd8f0387a62e36d6030bb6477374c9565c42e6bbf24fE",
            "POSTGRES_HOST": "dev1-growzone-database.cbs8g6go4hja.us-east-1.rds.amazonaws.com",
            "POSTGRES_DB": "dev_growzone_database",
            "POSTGRES_USER": "dev_api",
            "POSTGRES_PASSWORD": "GrowzoneDB2025SecurePass48bba072"
          }
        },
        "Role": {
          "Fn::GetAtt": [
            "IamRoleLambdaExecution",
            "Arn"
          ]
        }
      },
      "DependsOn": [
        "SendMessageLogGroup"
      ]
    },
    "ConnectLambdaVersionCNazOgwyIh2BaPpt8C1GpB42dsqvV98xUQQFxKxM7U": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "ConnectLambdaFunction"
        },
        "CodeSha256": "yUhPdIvcMkaAxIYojlYd2BdxkwKMW+E/1kptWgfGZcg="
      }
    },
    "DisconnectLambdaVersionfpMnOykdIxGQ4FOmXYprO56ReJREgcIHCmd3wQz4Qg": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "DisconnectLambdaFunction"
        },
        "CodeSha256": "yUhPdIvcMkaAxIYojlYd2BdxkwKMW+E/1kptWgfGZcg="
      }
    },
    "SendMessageLambdaVersionRMAX7ilvmcfDwv324pTVrhnQ69HuYkVgi2ItDQt5FM": {
      "Type": "AWS::Lambda::Version",
      "DeletionPolicy": "Retain",
      "Properties": {
        "FunctionName": {
          "Ref": "SendMessageLambdaFunction"
        },
        "CodeSha256": "yUhPdIvcMkaAxIYojlYd2BdxkwKMW+E/1kptWgfGZcg="
      }
    },
    "WebsocketsApi": {
      "Type": "AWS::ApiGatewayV2::Api",
      "Properties": {
        "Name": "production-growzone-chat-websocket-websockets",
        "RouteSelectionExpression": "$request.body.action",
        "Description": "Serverless Websockets",
        "ProtocolType": "WEBSOCKET"
      }
    },
    "ConnectWebsocketsIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "ConnectLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      }
    },
    "DisconnectWebsocketsIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "DisconnectLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      }
    },
    "SendMessageWebsocketsIntegration": {
      "Type": "AWS::ApiGatewayV2::Integration",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "IntegrationType": "AWS_PROXY",
        "IntegrationUri": {
          "Fn::Join": [
            "",
            [
              "arn:",
              {
                "Ref": "AWS::Partition"
              },
              ":apigateway:",
              {
                "Ref": "AWS::Region"
              },
              ":lambda:path/2015-03-31/functions/",
              {
                "Fn::GetAtt": [
                  "SendMessageLambdaFunction",
                  "Arn"
                ]
              },
              "/invocations"
            ]
          ]
        }
      }
    },
    "ConnectLambdaPermissionWebsockets": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebsocketsApi",
        "ConnectLambdaFunction"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "ConnectLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "DisconnectLambdaPermissionWebsockets": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebsocketsApi",
        "DisconnectLambdaFunction"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "DisconnectLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "SendMessageLambdaPermissionWebsockets": {
      "Type": "AWS::Lambda::Permission",
      "DependsOn": [
        "WebsocketsApi",
        "SendMessageLambdaFunction"
      ],
      "Properties": {
        "FunctionName": {
          "Fn::GetAtt": [
            "SendMessageLambdaFunction",
            "Arn"
          ]
        },
        "Action": "lambda:InvokeFunction",
        "Principal": "apigateway.amazonaws.com"
      }
    },
    "SconnectWebsocketsRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "RouteKey": "$connect",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "ConnectWebsocketsIntegration"
              }
            ]
          ]
        }
      }
    },
    "SdisconnectWebsocketsRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "RouteKey": "$disconnect",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "DisconnectWebsocketsIntegration"
              }
            ]
          ]
        }
      }
    },
    "SdefaultWebsocketsRoute": {
      "Type": "AWS::ApiGatewayV2::Route",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "RouteKey": "$default",
        "AuthorizationType": "NONE",
        "Target": {
          "Fn::Join": [
            "/",
            [
              "integrations",
              {
                "Ref": "SendMessageWebsocketsIntegration"
              }
            ]
          ]
        }
      }
    },
    "WebsocketsDeploymentStage": {
      "Type": "AWS::ApiGatewayV2::Stage",
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "StageName": "production",
        "Description": "Serverless Websockets",
        "DeploymentId": {
          "Ref": "WebsocketsDeploymentaXwaHFzd4kHok60ck0yy3mm7FkHZy4KFePDZMao"
        }
      }
    },
    "WebsocketsDeploymentaXwaHFzd4kHok60ck0yy3mm7FkHZy4KFePDZMao": {
      "Type": "AWS::ApiGatewayV2::Deployment",
      "DependsOn": [
        "SconnectWebsocketsRoute",
        "SdisconnectWebsocketsRoute",
        "SdefaultWebsocketsRoute"
      ],
      "Properties": {
        "ApiId": {
          "Ref": "WebsocketsApi"
        },
        "Description": "Serverless Websockets"
      }
    },
    "ConnectionsTable": {
      "Type": "AWS::DynamoDB::Table",
      "Properties": {
        "TableName": "growzone-chat-websocket-connections-production",
        "BillingMode": "PAY_PER_REQUEST",
        "TimeToLiveSpecification": {
          "AttributeName": "expiresAt",
          "Enabled": true
        },
        "AttributeDefinitions": [
          {
            "AttributeName": "connectionId",
            "AttributeType": "S"
          },
          {
            "AttributeName": "userId",
            "AttributeType": "N"
          }
        ],
        "KeySchema": [
          {
            "AttributeName": "connectionId",
            "KeyType": "HASH"
          }
        ],
        "GlobalSecondaryIndexes": [
          {
            "IndexName": "UserIdIndex",
            "KeySchema": [
              {
                "AttributeName": "userId",
                "KeyType": "HASH"
              }
            ],
            "Projection": {
              "ProjectionType": "ALL"
            }
          }
        ]
      }
    }
  },
  "Outputs": {
    "ServerlessDeploymentBucketName": {
      "Value": {
        "Ref": "ServerlessDeploymentBucket"
      },
      "Export": {
        "Name": "sls-growzone-chat-websocket-production-ServerlessDeploymentBucketName"
      }
    },
    "ConnectLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "ConnectLambdaVersionCNazOgwyIh2BaPpt8C1GpB42dsqvV98xUQQFxKxM7U"
      },
      "Export": {
        "Name": "sls-growzone-chat-websocket-production-ConnectLambdaFunctionQualifiedArn"
      }
    },
    "DisconnectLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "DisconnectLambdaVersionfpMnOykdIxGQ4FOmXYprO56ReJREgcIHCmd3wQz4Qg"
      },
      "Export": {
        "Name": "sls-growzone-chat-websocket-production-DisconnectLambdaFunctionQualifiedArn"
      }
    },
    "SendMessageLambdaFunctionQualifiedArn": {
      "Description": "Current Lambda function version",
      "Value": {
        "Ref": "SendMessageLambdaVersionRMAX7ilvmcfDwv324pTVrhnQ69HuYkVgi2ItDQt5FM"
      },
      "Export": {
        "Name": "sls-growzone-chat-websocket-production-SendMessageLambdaFunctionQualifiedArn"
      }
    },
    "ServiceEndpointWebsocket": {
      "Description": "URL of the service endpoint",
      "Value": {
        "Fn::Join": [
          "",
          [
            "wss://",
            {
              "Ref": "WebsocketsApi"
            },
            ".execute-api.",
            {
              "Ref": "AWS::Region"
            },
            ".",
            {
              "Ref": "AWS::URLSuffix"
            },
            "/production"
          ]
        ]
      },
      "Export": {
        "Name": "sls-growzone-chat-websocket-production-ServiceEndpointWebsocket"
      }
    },
    "WebSocketURL": {
      "Description": "WebSocket URL",
      "Value": {
        "Fn::Sub": "wss://${WebsocketsApi}.execute-api.${AWS::Region}.amazonaws.com/production"
      },
      "Export": {
        "Name": "growzone-chat-websocket-production-websocket-url"
      }
    },
    "ConnectionsTableName": {
      "Description": "DynamoDB Connections Table",
      "Value": {
        "Ref": "ConnectionsTable"
      },
      "Export": {
        "Name": "growzone-chat-websocket-production-connections-table"
      }
    }
  }
}